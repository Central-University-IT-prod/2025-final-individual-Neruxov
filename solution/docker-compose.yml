services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: advertee
      POSTGRES_USER: advertee
      POSTGRES_PASSWORD: REDACTED
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD', 'pg_isready' ]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: on-failure

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - prometheus-data:/etc/prometheus
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    healthcheck:
      test: [ 'CMD', 'wget', '-q', '-O', '-', 'http://localhost:9090/-/healthy' ]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: on-failure

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:3000/api/health' ]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: on-failure

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      SERVER_PORT: 8080
      POSTGRES_JDBC_URL: REDACTED
      POSTGRES_USERNAME: advertee
      POSTGRES_PASSWORD: REDACTED
      S3_ACCESS_KEY: REDACTED
      S3_SECRET_KEY: REDACTED
      S3_ENDPOINT: https://storage.yandexcloud.net
      S3_BUCKET_NAME: advertee
      OPENAI_API_KEY: REDACTED
      OPENAI_BASE_URL: https://openai-proxy.teamnoco.de
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:8080/actuator/health' ]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: on-failure

volumes:
  postgres-data:
  prometheus-data:
  grafana-data: